
go get github.com/onsi/ginkgo/ginkgo
go get github.com/onsi/ginkgo
go get github.com/onsi/ginkgo/v2
go get github.com/onsi/gomega

mkdir study-Ginkgo
cd study-Ginkgo
go mod init studyginkgo

create  target_funcs/target_funcs.go

$ cd target_funcs/
$ ginkgo bootstrap
Generating ginkgo test suite bootstrap for target_funcs in:
    target_funcs_suite_test.go


$ ginkgo
Running Suite: TargetFuncs Suite
================================
Random Seed: 1571986734
Will run 0 of 0 specs


Ran 0 of 0 Specs in 0.001 seconds
SUCCESS! -- 0 Passed | 0 Failed | 0 Pending | 0 Skipped
PASS

Ginkgo ran 1 suite in 5.353367082s
Test Suite Passed



$ go test
Running Suite: TargetFuncs Suite
================================
Random Seed: 1571986747
Will run 0 of 0 specs


Ran 0 of 0 Specs in 0.000 seconds
SUCCESS! -- 0 Passed | 0 Failed | 0 Pending | 0 Skipped
PASS
ok      studyginkgo/target_funcs    0.017s

$ ginkgo build
Compiling target_funcs...
    compiled target_funcs.test


./target_funcs.test
Running Suite: TargetFuncs Suite
================================
Random Seed: 1571986954
Will run 0 of 0 specs


Ran 0 of 0 Specs in 0.000 seconds
SUCCESS! -- 0 Passed | 0 Failed | 0 Pending | 0 Skipped
PASS


$ ginkgo generate target_funcs
Il comando precedente genera il test target_funcs_test.go. Se non si trova nella directory $GOPATH, 
potresti riscontrare il seguente errore e ginkgo probabilmente non supporta ancora gomod (2019-10-25 15:23:23). 
Questo errore non influisce sull'utilizzo, basta modificare UNKNOWN_PACKAGE_PATH in target_funcs_test.go al pacchetto in cui si trova.


target_funcs_test.go


package target_funcs_test

import (
    . "github.com/onsi/ginkgo"
    . "github.com/onsi/gomega"

    . "studyginkgo/target_funcs"
)

var _ = Describe("TargetFuncs", func() {

})

